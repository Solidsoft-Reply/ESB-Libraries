//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SolidsoftReply.Esb.Libraries.Resolution.ResolutionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", ConfigurationName="ResolutionService.IResolver")]
    public interface IResolver {
        
        // CODEGEN: Parameter 'Interchange' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05/Resolv" +
            "e", ReplyAction="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05/IResol" +
            "ver/ResolveResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TrackPoint[]))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Interchange")]
        SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.ResolveResponse Resolve(SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.ResolveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05/Resolv" +
            "e", ReplyAction="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05/IResol" +
            "ver/ResolveResponse")]
        System.Threading.Tasks.Task<SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.ResolveResponse> ResolveAsync(SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.ResolveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05/GetInt" +
            "erceptionPolicy", ReplyAction="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05/IResol" +
            "ver/GetInterceptionPolicyResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TrackPoint[]))]
        SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.BamActivityStep GetInterceptionPolicy(string activityName, string stepName, string policyName, string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05/GetInt" +
            "erceptionPolicy", ReplyAction="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05/IResol" +
            "ver/GetInterceptionPolicyResponse")]
        System.Threading.Tasks.Task<SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.BamActivityStep> GetInterceptionPolicyAsync(string activityName, string stepName, string policyName, string version);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class Parameters : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ParametersKey keyField;
        
        private System.Xml.XmlElement valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ParametersKey Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.Xml.XmlElement Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class ParametersKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string stringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string @string {
            get {
                return this.stringField;
            }
            set {
                this.stringField = value;
                this.RaisePropertyChanged("string");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="ActivityInterceptorConfiguration", Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class ActivityInterceptorConfiguration1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TrackPoint[] trackPointField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TrackPoint", Order=0)]
        public TrackPoint[] TrackPoint {
            get {
                return this.trackPointField;
            }
            set {
                this.trackPointField = value;
                this.RaisePropertyChanged("TrackPoint");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class TrackPoint : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object locationField;
        
        private object extractionInfoField;
        
        private TrackPointType typeField;
        
        private string itemNameField;
        
        private string referenceTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public object Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
                this.RaisePropertyChanged("Location");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public object ExtractionInfo {
            get {
                return this.extractionInfoField;
            }
            set {
                this.extractionInfoField = value;
                this.RaisePropertyChanged("ExtractionInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public TrackPointType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
                this.RaisePropertyChanged("ItemName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReferenceType {
            get {
                return this.referenceTypeField;
            }
            set {
                this.referenceTypeField = value;
                this.RaisePropertyChanged("ReferenceType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public enum TrackPointType {
        
        /// <remarks/>
        Start,
        
        /// <remarks/>
        End,
        
        /// <remarks/>
        Data,
        
        /// <remarks/>
        Relationship,
        
        /// <remarks/>
        Reference,
        
        /// <remarks/>
        Continue,
        
        /// <remarks/>
        EnableContinuation,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BamActivityStep))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class ActivityInterceptorConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TrackPoint[] trackPointField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TrackPoint", Order=0)]
        public TrackPoint[] TrackPoint {
            get {
                return this.trackPointField;
            }
            set {
                this.trackPointField = value;
                this.RaisePropertyChanged("TrackPoint");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class BamActivityStep : ActivityInterceptorConfiguration {
        
        private string activityNameField;
        
        private string stepNameField;
        
        private string[] extensionStepsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ActivityName {
            get {
                return this.activityNameField;
            }
            set {
                this.activityNameField = value;
                this.RaisePropertyChanged("ActivityName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string StepName {
            get {
                return this.stepNameField;
            }
            set {
                this.stepNameField = value;
                this.RaisePropertyChanged("StepName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] ExtensionSteps {
            get {
                return this.extensionStepsField;
            }
            set {
                this.extensionStepsField = value;
                this.RaisePropertyChanged("ExtensionSteps");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class BtsPropertyType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string valueField;
        
        private string namespaceField;
        
        private bool promotedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
                this.RaisePropertyChanged("Namespace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Promoted {
            get {
                return this.promotedField;
            }
            set {
                this.promotedField = value;
                this.RaisePropertyChanged("Promoted");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class PropertyType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class DirectivesDictionaryItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DirectivesDictionaryItemKey keyField;
        
        private DirectivesDictionaryItemValue valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DirectivesDictionaryItemKey Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public DirectivesDictionaryItemValue Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class DirectivesDictionaryItemKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string stringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string @string {
            get {
                return this.stringField;
            }
            set {
                this.stringField = value;
                this.RaisePropertyChanged("string");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class DirectivesDictionaryItemValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DirectivesDictionaryItemValueDirective directiveField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DirectivesDictionaryItemValueDirective Directive {
            get {
                return this.directiveField;
            }
            set {
                this.directiveField = value;
                this.RaisePropertyChanged("Directive");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class DirectivesDictionaryItemValueDirective : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string keyNameField;
        
        private string directiveCategoriesField;
        
        private string endPointField;
        
        private string transportTypeField;
        
        private string endPointConfigurationField;
        
        private string soapActionField;
        
        private string mapToApplyField;
        
        private string bamActivityField;
        
        private string bamStepNameField;
        
        private string[] bamStepExtensionsField;
        
        private string bamAfterMapStepNameField;
        
        private string bamConnectionStringField;
        
        private bool bamIsBufferedField;
        
        private bool bamIsBufferedFieldSpecified;
        
        private int bamFlushThresholdField;
        
        private bool bamFlushThresholdFieldSpecified;
        
        private string bamTrackpointPolicyNameField;
        
        private string bamTrackpointPolicyVersionField;
        
        private int retryCountField;
        
        private bool retryCountFieldSpecified;
        
        private int retryIntervalField;
        
        private bool retryIntervalFieldSpecified;
        
        private int retryLevelField;
        
        private bool retryLevelFieldSpecified;
        
        private System.DateTime serviceWindowStartTimeField;
        
        private bool serviceWindowStartTimeFieldSpecified;
        
        private System.DateTime serviceWindowStopTimeField;
        
        private bool serviceWindowStopTimeFieldSpecified;
        
        private string validationPolicyNameField;
        
        private string validationPolicyVersionField;
        
        private bool errorOnInvalidField;
        
        private bool errorOnInvalidFieldSpecified;
        
        private DirectivesDictionaryItemValueDirectiveItem[] propertiesField;
        
        private DirectivesDictionaryItemValueDirectiveItem1[] btsPropertiesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string KeyName {
            get {
                return this.keyNameField;
            }
            set {
                this.keyNameField = value;
                this.RaisePropertyChanged("KeyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DirectiveCategories {
            get {
                return this.directiveCategoriesField;
            }
            set {
                this.directiveCategoriesField = value;
                this.RaisePropertyChanged("DirectiveCategories");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string EndPoint {
            get {
                return this.endPointField;
            }
            set {
                this.endPointField = value;
                this.RaisePropertyChanged("EndPoint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TransportType {
            get {
                return this.transportTypeField;
            }
            set {
                this.transportTypeField = value;
                this.RaisePropertyChanged("TransportType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string EndPointConfiguration {
            get {
                return this.endPointConfigurationField;
            }
            set {
                this.endPointConfigurationField = value;
                this.RaisePropertyChanged("EndPointConfiguration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string SoapAction {
            get {
                return this.soapActionField;
            }
            set {
                this.soapActionField = value;
                this.RaisePropertyChanged("SoapAction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string MapToApply {
            get {
                return this.mapToApplyField;
            }
            set {
                this.mapToApplyField = value;
                this.RaisePropertyChanged("MapToApply");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string BamActivity {
            get {
                return this.bamActivityField;
            }
            set {
                this.bamActivityField = value;
                this.RaisePropertyChanged("BamActivity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string BamStepName {
            get {
                return this.bamStepNameField;
            }
            set {
                this.bamStepNameField = value;
                this.RaisePropertyChanged("BamStepName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        [System.Xml.Serialization.XmlArrayItemAttribute("BamStepExtension", IsNullable=false)]
        public string[] BamStepExtensions {
            get {
                return this.bamStepExtensionsField;
            }
            set {
                this.bamStepExtensionsField = value;
                this.RaisePropertyChanged("BamStepExtensions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string BamAfterMapStepName {
            get {
                return this.bamAfterMapStepNameField;
            }
            set {
                this.bamAfterMapStepNameField = value;
                this.RaisePropertyChanged("BamAfterMapStepName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string BamConnectionString {
            get {
                return this.bamConnectionStringField;
            }
            set {
                this.bamConnectionStringField = value;
                this.RaisePropertyChanged("BamConnectionString");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public bool BamIsBuffered {
            get {
                return this.bamIsBufferedField;
            }
            set {
                this.bamIsBufferedField = value;
                this.RaisePropertyChanged("BamIsBuffered");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BamIsBufferedSpecified {
            get {
                return this.bamIsBufferedFieldSpecified;
            }
            set {
                this.bamIsBufferedFieldSpecified = value;
                this.RaisePropertyChanged("BamIsBufferedSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public int BamFlushThreshold {
            get {
                return this.bamFlushThresholdField;
            }
            set {
                this.bamFlushThresholdField = value;
                this.RaisePropertyChanged("BamFlushThreshold");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BamFlushThresholdSpecified {
            get {
                return this.bamFlushThresholdFieldSpecified;
            }
            set {
                this.bamFlushThresholdFieldSpecified = value;
                this.RaisePropertyChanged("BamFlushThresholdSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string BamTrackpointPolicyName {
            get {
                return this.bamTrackpointPolicyNameField;
            }
            set {
                this.bamTrackpointPolicyNameField = value;
                this.RaisePropertyChanged("BamTrackpointPolicyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string BamTrackpointPolicyVersion {
            get {
                return this.bamTrackpointPolicyVersionField;
            }
            set {
                this.bamTrackpointPolicyVersionField = value;
                this.RaisePropertyChanged("BamTrackpointPolicyVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public int RetryCount {
            get {
                return this.retryCountField;
            }
            set {
                this.retryCountField = value;
                this.RaisePropertyChanged("RetryCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RetryCountSpecified {
            get {
                return this.retryCountFieldSpecified;
            }
            set {
                this.retryCountFieldSpecified = value;
                this.RaisePropertyChanged("RetryCountSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public int RetryInterval {
            get {
                return this.retryIntervalField;
            }
            set {
                this.retryIntervalField = value;
                this.RaisePropertyChanged("RetryInterval");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RetryIntervalSpecified {
            get {
                return this.retryIntervalFieldSpecified;
            }
            set {
                this.retryIntervalFieldSpecified = value;
                this.RaisePropertyChanged("RetryIntervalSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public int RetryLevel {
            get {
                return this.retryLevelField;
            }
            set {
                this.retryLevelField = value;
                this.RaisePropertyChanged("RetryLevel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RetryLevelSpecified {
            get {
                return this.retryLevelFieldSpecified;
            }
            set {
                this.retryLevelFieldSpecified = value;
                this.RaisePropertyChanged("RetryLevelSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public System.DateTime ServiceWindowStartTime {
            get {
                return this.serviceWindowStartTimeField;
            }
            set {
                this.serviceWindowStartTimeField = value;
                this.RaisePropertyChanged("ServiceWindowStartTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceWindowStartTimeSpecified {
            get {
                return this.serviceWindowStartTimeFieldSpecified;
            }
            set {
                this.serviceWindowStartTimeFieldSpecified = value;
                this.RaisePropertyChanged("ServiceWindowStartTimeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public System.DateTime ServiceWindowStopTime {
            get {
                return this.serviceWindowStopTimeField;
            }
            set {
                this.serviceWindowStopTimeField = value;
                this.RaisePropertyChanged("ServiceWindowStopTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceWindowStopTimeSpecified {
            get {
                return this.serviceWindowStopTimeFieldSpecified;
            }
            set {
                this.serviceWindowStopTimeFieldSpecified = value;
                this.RaisePropertyChanged("ServiceWindowStopTimeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string ValidationPolicyName {
            get {
                return this.validationPolicyNameField;
            }
            set {
                this.validationPolicyNameField = value;
                this.RaisePropertyChanged("ValidationPolicyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string ValidationPolicyVersion {
            get {
                return this.validationPolicyVersionField;
            }
            set {
                this.validationPolicyVersionField = value;
                this.RaisePropertyChanged("ValidationPolicyVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public bool ErrorOnInvalid {
            get {
                return this.errorOnInvalidField;
            }
            set {
                this.errorOnInvalidField = value;
                this.RaisePropertyChanged("ErrorOnInvalid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ErrorOnInvalidSpecified {
            get {
                return this.errorOnInvalidFieldSpecified;
            }
            set {
                this.errorOnInvalidFieldSpecified = value;
                this.RaisePropertyChanged("ErrorOnInvalidSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=24)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Item", IsNullable=false)]
        public DirectivesDictionaryItemValueDirectiveItem[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
                this.RaisePropertyChanged("Properties");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=25)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Item", IsNullable=false)]
        public DirectivesDictionaryItemValueDirectiveItem1[] BtsProperties {
            get {
                return this.btsPropertiesField;
            }
            set {
                this.btsPropertiesField = value;
                this.RaisePropertyChanged("BtsProperties");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class DirectivesDictionaryItemValueDirectiveItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DirectivesDictionaryItemValueDirectiveItemKey keyField;
        
        private DirectivesDictionaryItemValueDirectiveItemValue valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DirectivesDictionaryItemValueDirectiveItemKey Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public DirectivesDictionaryItemValueDirectiveItemValue Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class DirectivesDictionaryItemValueDirectiveItemKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string stringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string @string {
            get {
                return this.stringField;
            }
            set {
                this.stringField = value;
                this.RaisePropertyChanged("string");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class DirectivesDictionaryItemValueDirectiveItemValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PropertyType propertyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public PropertyType Property {
            get {
                return this.propertyField;
            }
            set {
                this.propertyField = value;
                this.RaisePropertyChanged("Property");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class DirectivesDictionaryItemValueDirectiveItem1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DirectivesDictionaryItemValueDirectiveItemKey1 keyField;
        
        private DirectivesDictionaryItemValueDirectiveItemValue1 valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DirectivesDictionaryItemValueDirectiveItemKey1 Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public DirectivesDictionaryItemValueDirectiveItemValue1 Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class DirectivesDictionaryItemValueDirectiveItemKey1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string stringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string @string {
            get {
                return this.stringField;
            }
            set {
                this.stringField = value;
                this.RaisePropertyChanged("string");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class DirectivesDictionaryItemValueDirectiveItemValue1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private BtsPropertyType btsPropertyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BtsPropertyType BtsProperty {
            get {
                return this.btsPropertyField;
            }
            set {
                this.btsPropertyField = value;
                this.RaisePropertyChanged("BtsProperty");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public partial class Interchange : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string providerNameField;
        
        private string serviceNameField;
        
        private string bindingAccessPointField;
        
        private string bindingUrlTypeField;
        
        private string messageTypeField;
        
        private string operationNameField;
        
        private string messageRoleField;
        
        private MessageDirectionTypes messageDirectionField;
        
        private Parameters[] parametersField;
        
        private DirectivesDictionaryItem[] directivesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ProviderName {
            get {
                return this.providerNameField;
            }
            set {
                this.providerNameField = value;
                this.RaisePropertyChanged("ProviderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ServiceName {
            get {
                return this.serviceNameField;
            }
            set {
                this.serviceNameField = value;
                this.RaisePropertyChanged("ServiceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string BindingAccessPoint {
            get {
                return this.bindingAccessPointField;
            }
            set {
                this.bindingAccessPointField = value;
                this.RaisePropertyChanged("BindingAccessPoint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string BindingUrlType {
            get {
                return this.bindingUrlTypeField;
            }
            set {
                this.bindingUrlTypeField = value;
                this.RaisePropertyChanged("BindingUrlType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string MessageType {
            get {
                return this.messageTypeField;
            }
            set {
                this.messageTypeField = value;
                this.RaisePropertyChanged("MessageType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string OperationName {
            get {
                return this.operationNameField;
            }
            set {
                this.operationNameField = value;
                this.RaisePropertyChanged("OperationName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string MessageRole {
            get {
                return this.messageRoleField;
            }
            set {
                this.messageRoleField = value;
                this.RaisePropertyChanged("MessageRole");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public MessageDirectionTypes MessageDirection {
            get {
                return this.messageDirectionField;
            }
            set {
                this.messageDirectionField = value;
                this.RaisePropertyChanged("MessageDirection");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Item", IsNullable=false)]
        public Parameters[] Parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
                this.RaisePropertyChanged("Parameters");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Item", IsNullable=false)]
        public DirectivesDictionaryItem[] Directives {
            get {
                return this.directivesField;
            }
            set {
                this.directivesField = value;
                this.RaisePropertyChanged("Directives");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05")]
    public enum MessageDirectionTypes {
        
        /// <remarks/>
        NotSpecified,
        
        /// <remarks/>
        MsgIn,
        
        /// <remarks/>
        MsgOut,
        
        /// <remarks/>
        Both,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Resolve", WrapperNamespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", IsWrapped=true)]
    public partial class ResolveRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", Order=0)]
        public string ProviderName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", Order=1)]
        public string ServiceName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", Order=2)]
        public string BindingAccessPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", Order=3)]
        public string BindingUrlType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", Order=4)]
        public string MessageType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", Order=5)]
        public string OperationName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", Order=6)]
        public string MessageRole;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", Order=7)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Item", IsNullable=false)]
        public SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.Parameters[] Parameters;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", Order=8)]
        public SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.MessageDirectionTypes MessageDirection;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", Order=9)]
        public string PolicyName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", Order=10)]
        public string Version;
        
        public ResolveRequest() {
        }
        
        public ResolveRequest(string ProviderName, string ServiceName, string BindingAccessPoint, string BindingUrlType, string MessageType, string OperationName, string MessageRole, SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.Parameters[] Parameters, SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.MessageDirectionTypes MessageDirection, string PolicyName, string Version) {
            this.ProviderName = ProviderName;
            this.ServiceName = ServiceName;
            this.BindingAccessPoint = BindingAccessPoint;
            this.BindingUrlType = BindingUrlType;
            this.MessageType = MessageType;
            this.OperationName = OperationName;
            this.MessageRole = MessageRole;
            this.Parameters = Parameters;
            this.MessageDirection = MessageDirection;
            this.PolicyName = PolicyName;
            this.Version = Version;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResolveResponse", WrapperNamespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", IsWrapped=true)]
    public partial class ResolveResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://solidsoftreply.com/schemas/webservices/esbresolutionservice/2015/05", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.Interchange Interchange;
        
        public ResolveResponse() {
        }
        
        public ResolveResponse(SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.Interchange Interchange) {
            this.Interchange = Interchange;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IResolverChannel : SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.IResolver, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResolverClient : System.ServiceModel.ClientBase<SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.IResolver>, SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.IResolver {
        
        public ResolverClient() {
        }
        
        public ResolverClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ResolverClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ResolverClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ResolverClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.ResolveResponse SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.IResolver.Resolve(SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.ResolveRequest request) {
            return base.Channel.Resolve(request);
        }
        
        public SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.Interchange Resolve(string ProviderName, string ServiceName, string BindingAccessPoint, string BindingUrlType, string MessageType, string OperationName, string MessageRole, SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.Parameters[] Parameters, SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.MessageDirectionTypes MessageDirection, string PolicyName, string Version) {
            SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.ResolveRequest inValue = new SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.ResolveRequest();
            inValue.ProviderName = ProviderName;
            inValue.ServiceName = ServiceName;
            inValue.BindingAccessPoint = BindingAccessPoint;
            inValue.BindingUrlType = BindingUrlType;
            inValue.MessageType = MessageType;
            inValue.OperationName = OperationName;
            inValue.MessageRole = MessageRole;
            inValue.Parameters = Parameters;
            inValue.MessageDirection = MessageDirection;
            inValue.PolicyName = PolicyName;
            inValue.Version = Version;
            SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.ResolveResponse retVal = ((SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.IResolver)(this)).Resolve(inValue);
            return retVal.Interchange;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.ResolveResponse> SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.IResolver.ResolveAsync(SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.ResolveRequest request) {
            return base.Channel.ResolveAsync(request);
        }
        
        public System.Threading.Tasks.Task<SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.ResolveResponse> ResolveAsync(string ProviderName, string ServiceName, string BindingAccessPoint, string BindingUrlType, string MessageType, string OperationName, string MessageRole, SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.Parameters[] Parameters, SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.MessageDirectionTypes MessageDirection, string PolicyName, string Version) {
            SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.ResolveRequest inValue = new SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.ResolveRequest();
            inValue.ProviderName = ProviderName;
            inValue.ServiceName = ServiceName;
            inValue.BindingAccessPoint = BindingAccessPoint;
            inValue.BindingUrlType = BindingUrlType;
            inValue.MessageType = MessageType;
            inValue.OperationName = OperationName;
            inValue.MessageRole = MessageRole;
            inValue.Parameters = Parameters;
            inValue.MessageDirection = MessageDirection;
            inValue.PolicyName = PolicyName;
            inValue.Version = Version;
            return ((SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.IResolver)(this)).ResolveAsync(inValue);
        }
        
        public SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.BamActivityStep GetInterceptionPolicy(string activityName, string stepName, string policyName, string version) {
            return base.Channel.GetInterceptionPolicy(activityName, stepName, policyName, version);
        }
        
        public System.Threading.Tasks.Task<SolidsoftReply.Esb.Libraries.Resolution.ResolutionService.BamActivityStep> GetInterceptionPolicyAsync(string activityName, string stepName, string policyName, string version) {
            return base.Channel.GetInterceptionPolicyAsync(activityName, stepName, policyName, version);
        }
    }
}
